# syntax=docker/dockerfile:1.7

ARG NODE_VERSION=20-alpine

FROM node:${NODE_VERSION} AS base
ENV PNPM_HOME="/pnpm"
ENV PNPM_STORE_PATH="/pnpm/store"
ENV PATH="$PNPM_HOME:$PATH"
ENV HUSKY=0
WORKDIR /workspace
RUN apk add --no-cache libc6-compat && corepack enable

FROM base AS deps
COPY pnpm-lock.yaml pnpm-workspace.yaml package.json tsconfig.base.json ./
COPY packages ./packages
COPY shared ./shared
COPY services/bff-portal/package.json services/bff-portal/package.json
RUN --mount=type=cache,id=pnpm-store,target=/pnpm/store pnpm fetch --filter bff-portal...

FROM base AS builder
COPY pnpm-lock.yaml pnpm-workspace.yaml package.json tsconfig.base.json ./
COPY packages ./packages
COPY shared ./shared
COPY services/bff-portal ./services/bff-portal
RUN --mount=type=cache,id=pnpm-store,target=/pnpm/store pnpm install --frozen-lockfile
RUN pnpm --filter @cable-platform/validation... build
RUN pnpm --filter @cable-platform/contracts... build
RUN pnpm --filter bff-portal... build
RUN pnpm deploy --filter bff-portal --prod /opt/app
RUN rm -rf /opt/app/test /opt/app/.tap /opt/app/src /opt/app/test-e2e

FROM node:${NODE_VERSION} AS runner
ENV NODE_ENV=production
ENV PORT=4001
WORKDIR /app
COPY --from=builder /opt/app/ ./
EXPOSE 4001
CMD ["node", "dist/index.js"]
